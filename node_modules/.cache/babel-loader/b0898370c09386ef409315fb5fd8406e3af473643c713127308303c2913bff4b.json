{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdel\\\\Downloads\\\\qr_attendance_pwa_with_camera\\\\src\\\\QRScannerCameraApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Html5Qrcode } from \"html5-qrcode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_SCRIPT_URL = \"https://script.google.com/macros/s/AKfycbxg9ya2e1Pf3vAMSGzwgSex0MtA86IU8YVQ5ufLGhGT-LwnkueU56huPiCoenuJVlNYHg/exec\";\nexport default function QRScannerCameraApp() {\n  _s();\n  const [status, setStatus] = useState(\"\");\n  const [log, setLog] = useState([]);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const qrCodeRegionId = \"reader\";\n  const html5QrCodeRef = useRef(null);\n  const isProcessingRef = useRef(false); // 🚨 This prevents duplicate scans\n\n  const handleScanSuccess = async decodedText => {\n    if (isProcessingRef.current) return; // 🔐 Prevent duplicate triggers\n    isProcessingRef.current = true;\n\n    // Check for duplicate\n    if (log.some(entry => entry.id === decodedText)) {\n      setStatus(\"Already Scanned\");\n      isProcessingRef.current = false;\n      return;\n    }\n    try {\n      await fetch(GOOGLE_SCRIPT_URL, {\n        method: \"POST\",\n        mode: \"no-cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          scannedId: decodedText\n        })\n      });\n      const newLog = {\n        id: decodedText,\n        result: \"SENT\",\n        time: new Date().toLocaleTimeString()\n      };\n      setLog(prev => [...prev, newLog]);\n      setStatus(\"Submitted\");\n      setShowSuccess(true);\n\n      // Stop and clear camera temporarily\n      await html5QrCodeRef.current.stop();\n      await html5QrCodeRef.current.clear();\n\n      // Restart scanner after delay\n      setTimeout(() => {\n        setShowSuccess(false);\n        setStatus(\"\");\n        isProcessingRef.current = false;\n        Html5Qrcode.getCameras().then(devices => {\n          if (devices && devices.length) {\n            html5QrCodeRef.current.start({\n              facingMode: \"environment\"\n            }, {\n              fps: 10,\n              qrbox: 250\n            }, handleScanSuccess);\n          }\n        });\n      }, 3000);\n    } catch (err) {\n      setStatus(\"Error\");\n      isProcessingRef.current = false;\n    }\n  };\n  useEffect(() => {\n    html5QrCodeRef.current = new Html5Qrcode(qrCodeRegionId);\n    Html5Qrcode.getCameras().then(devices => {\n      if (devices && devices.length) {\n        html5QrCodeRef.current.start({\n          facingMode: \"environment\"\n        }, {\n          fps: 10,\n          qrbox: 250\n        }, handleScanSuccess);\n      }\n    });\n    return () => {\n      var _html5QrCodeRef$curre;\n      (_html5QrCodeRef$curre = html5QrCodeRef.current) === null || _html5QrCodeRef$curre === void 0 ? void 0 : _html5QrCodeRef$curre.stop().then(() => {\n        html5QrCodeRef.current.clear();\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Scan QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: qrCodeRegionId,\n      style: {\n        width: \"100%\",\n        maxWidth: 400,\n        margin: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), showSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20,\n        fontSize: \"4rem\",\n        color: \"green\",\n        animation: \"pop 0.4s ease-out\"\n      },\n      children: \"\\u2705\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: log.map((entry, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [entry.time, \" - \", entry.id, \" - \", entry.result]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes pop {\n            0% { transform: scale(0.5); opacity: 0; }\n            100% { transform: scale(1); opacity: 1; }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(QRScannerCameraApp, \"mFP/BWyWDiJMQSYnqpYW6jQQ2hw=\");\n_c = QRScannerCameraApp;\nvar _c;\n$RefreshReg$(_c, \"QRScannerCameraApp\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Html5Qrcode","jsxDEV","_jsxDEV","GOOGLE_SCRIPT_URL","QRScannerCameraApp","_s","status","setStatus","log","setLog","showSuccess","setShowSuccess","qrCodeRegionId","html5QrCodeRef","isProcessingRef","handleScanSuccess","decodedText","current","some","entry","id","fetch","method","mode","headers","body","JSON","stringify","scannedId","newLog","result","time","Date","toLocaleTimeString","prev","stop","clear","setTimeout","getCameras","then","devices","length","start","facingMode","fps","qrbox","err","_html5QrCodeRef$curre","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","width","maxWidth","margin","marginTop","fontSize","color","animation","map","i","_c","$RefreshReg$"],"sources":["C:/Users/abdel/Downloads/qr_attendance_pwa_with_camera/src/QRScannerCameraApp.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Html5Qrcode } from \"html5-qrcode\";\n\nconst GOOGLE_SCRIPT_URL =\n  \"https://script.google.com/macros/s/AKfycbxg9ya2e1Pf3vAMSGzwgSex0MtA86IU8YVQ5ufLGhGT-LwnkueU56huPiCoenuJVlNYHg/exec\";\n\nexport default function QRScannerCameraApp() {\n  const [status, setStatus] = useState(\"\");\n  const [log, setLog] = useState([]);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const qrCodeRegionId = \"reader\";\n  const html5QrCodeRef = useRef(null);\n  const isProcessingRef = useRef(false); // 🚨 This prevents duplicate scans\n\n  const handleScanSuccess = async (decodedText) => {\n    if (isProcessingRef.current) return; // 🔐 Prevent duplicate triggers\n    isProcessingRef.current = true;\n\n    // Check for duplicate\n    if (log.some((entry) => entry.id === decodedText)) {\n      setStatus(\"Already Scanned\");\n      isProcessingRef.current = false;\n      return;\n    }\n\n    try {\n      await fetch(GOOGLE_SCRIPT_URL, {\n        method: \"POST\",\n        mode: \"no-cors\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ scannedId: decodedText }),\n      });\n\n      const newLog = {\n        id: decodedText,\n        result: \"SENT\",\n        time: new Date().toLocaleTimeString(),\n      };\n      setLog((prev) => [...prev, newLog]);\n      setStatus(\"Submitted\");\n      setShowSuccess(true);\n\n      // Stop and clear camera temporarily\n      await html5QrCodeRef.current.stop();\n      await html5QrCodeRef.current.clear();\n\n      // Restart scanner after delay\n      setTimeout(() => {\n        setShowSuccess(false);\n        setStatus(\"\");\n        isProcessingRef.current = false;\n\n        Html5Qrcode.getCameras().then((devices) => {\n          if (devices && devices.length) {\n            html5QrCodeRef.current.start(\n              { facingMode: \"environment\" },\n              { fps: 10, qrbox: 250 },\n              handleScanSuccess\n            );\n          }\n        });\n      }, 3000);\n    } catch (err) {\n      setStatus(\"Error\");\n      isProcessingRef.current = false;\n    }\n  };\n\n  useEffect(() => {\n    html5QrCodeRef.current = new Html5Qrcode(qrCodeRegionId);\n    Html5Qrcode.getCameras().then((devices) => {\n      if (devices && devices.length) {\n        html5QrCodeRef.current.start(\n          { facingMode: \"environment\" },\n          { fps: 10, qrbox: 250 },\n          handleScanSuccess\n        );\n      }\n    });\n\n    return () => {\n      html5QrCodeRef.current?.stop().then(() => {\n        html5QrCodeRef.current.clear();\n      });\n    };\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h2>Scan QR Code</h2>\n      <div id={qrCodeRegionId} style={{ width: \"100%\", maxWidth: 400, margin: \"auto\" }}></div>\n\n      {showSuccess && (\n        <div\n          style={{\n            marginTop: 20,\n            fontSize: \"4rem\",\n            color: \"green\",\n            animation: \"pop 0.4s ease-out\",\n          }}\n        >\n          ✅\n        </div>\n      )}\n\n      <p>Status: {status}</p>\n      <ul>\n        {log.map((entry, i) => (\n          <li key={i}>\n            {entry.time} - {entry.id} - {entry.result}\n          </li>\n        ))}\n      </ul>\n\n      <style>\n        {`\n          @keyframes pop {\n            0% { transform: scale(0.5); opacity: 0; }\n            100% { transform: scale(1); opacity: 1; }\n          }\n        `}\n      </style>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}