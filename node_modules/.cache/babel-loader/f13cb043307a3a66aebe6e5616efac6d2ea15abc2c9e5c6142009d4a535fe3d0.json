{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdel\\\\Downloads\\\\qr_attendance_pwa_with_camera\\\\src\\\\QRScannerCameraApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Html5Qrcode } from \"html5-qrcode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_SCRIPT_URL = \"https://script.google.com/macros/s/AKfycbxg9ya2e1Pf3vAMSGzwgSex0MtA86IU8YVQ5ufLGhGT-LwnkueU56huPiCoenuJVlNYHg/exec\"; // Replace this\n\nexport default function QRScannerCameraApp() {\n  _s();\n  const [status, setStatus] = useState(\"\");\n  const [log, setLog] = useState([]);\n  const qrCodeRegionId = \"reader\";\n  const html5QrCodeRef = useRef(null);\n  const handleScanSuccess = async decodedText => {\n    try {\n      await fetch(GOOGLE_SCRIPT_URL, {\n        method: \"POST\",\n        mode: \"no-cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          scannedId: decodedText\n        })\n      });\n      const newLog = {\n        id: decodedText,\n        result: \"SENT\",\n        time: new Date().toLocaleTimeString()\n      };\n      setLog(prev => [...prev, newLog]);\n      setStatus(\"Submitted\");\n    } catch (err) {\n      setStatus(\"Error\");\n    }\n  };\n  useEffect(() => {\n    html5QrCodeRef.current = new Html5Qrcode(qrCodeRegionId);\n    Html5Qrcode.getCameras().then(devices => {\n      if (devices && devices.length) {\n        html5QrCodeRef.current.start({\n          facingMode: \"environment\"\n        }, {\n          fps: 10,\n          qrbox: 250\n        }, handleScanSuccess);\n      }\n    });\n    return () => {\n      html5QrCodeRef.current.stop().then(() => {\n        html5QrCodeRef.current.clear();\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Scan QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: qrCodeRegionId,\n      style: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: log.map((entry, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [entry.time, \" - \", entry.id, \" - \", entry.result]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(QRScannerCameraApp, \"uF5fHnPUGZRlwy/dHxJlAheF9E0=\");\n_c = QRScannerCameraApp;\nvar _c;\n$RefreshReg$(_c, \"QRScannerCameraApp\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Html5Qrcode","jsxDEV","_jsxDEV","GOOGLE_SCRIPT_URL","QRScannerCameraApp","_s","status","setStatus","log","setLog","qrCodeRegionId","html5QrCodeRef","handleScanSuccess","decodedText","fetch","method","mode","headers","body","JSON","stringify","scannedId","newLog","id","result","time","Date","toLocaleTimeString","prev","err","current","getCameras","then","devices","length","start","facingMode","fps","qrbox","stop","clear","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","map","entry","i","_c","$RefreshReg$"],"sources":["C:/Users/abdel/Downloads/qr_attendance_pwa_with_camera/src/QRScannerCameraApp.js"],"sourcesContent":["\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Html5Qrcode } from \"html5-qrcode\";\n\nconst GOOGLE_SCRIPT_URL = \"https://script.google.com/macros/s/AKfycbxg9ya2e1Pf3vAMSGzwgSex0MtA86IU8YVQ5ufLGhGT-LwnkueU56huPiCoenuJVlNYHg/exec\"; // Replace this\n\nexport default function QRScannerCameraApp() {\n  const [status, setStatus] = useState(\"\");\n  const [log, setLog] = useState([]);\n  const qrCodeRegionId = \"reader\";\n  const html5QrCodeRef = useRef(null);\n\n  const handleScanSuccess = async (decodedText) => {\n    try {\n      await fetch(GOOGLE_SCRIPT_URL, {\n        method: \"POST\",\n        mode: \"no-cors\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ scannedId: decodedText })\n      });\n\n      const newLog = {\n        id: decodedText,\n        result: \"SENT\",\n        time: new Date().toLocaleTimeString()\n      };\n      setLog((prev) => [...prev, newLog]);\n      setStatus(\"Submitted\");\n    } catch (err) {\n      setStatus(\"Error\");\n    }\n  };\n\n  useEffect(() => {\n    html5QrCodeRef.current = new Html5Qrcode(qrCodeRegionId);\n    Html5Qrcode.getCameras().then((devices) => {\n      if (devices && devices.length) {\n        html5QrCodeRef.current.start(\n          { facingMode: \"environment\" },\n          { fps: 10, qrbox: 250 },\n          handleScanSuccess\n        );\n      }\n    });\n    return () => {\n      html5QrCodeRef.current.stop().then(() => {\n        html5QrCodeRef.current.clear();\n      });\n    };\n  }, []);\n\n  return (\n    <div>\n      <h2>Scan QR Code</h2>\n      <div id={qrCodeRegionId} style={{ width: \"100%\" }}></div>\n      <p>Status: {status}</p>\n      <ul>\n        {log.map((entry, i) => (\n          <li key={i}>{entry.time} - {entry.id} - {entry.result}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}